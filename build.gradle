plugins {
    id 'java'
    id 'application'
    id 'distribution'
}

group = 'ph.edu.tip'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    // https://mvnrepository.com/artifact/com.j256.ormlite/ormlite-jdbc
    implementation group: 'com.j256.ormlite', name: 'ormlite-jdbc', version: '6.1'
    // https://logging.apache.org/log4j/2.x/maven-artifacts.html
    implementation 'org.apache.logging.log4j:log4j-api:2.23.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.23.1'
    // local @ /libs
    implementation files('libs/mssql-jdbc-12.6.1.jre11.jar')
    implementation files('libs/mssql-jdbc-12.6.1.jre11-javadoc.jar')
    implementation files('libs/mssql-jdbc-12.6.1.jre11-sources.jar')
}

test {
    useJUnitPlatform()
}

application {
    mainClass = 'ph.edu.tip.mamamoo.Main'
    File outDir = new File('/out')
    outDir.mkdirs()
    tasks.run.workingDir = outDir
}

distributions {
    main {
        contents {
            into('') {
                from 'src/main/resources'
                exclude '**/*.properties'
            }
        }
    }
}

run {
    doFirst {
        copy {
            from 'src/main/resources'
            into 'out'
            exclude '**/*.properties'
        }
    }
    standardInput = System.in
}

task assembleAndRun() {
    dependsOn 'assemble'
    outputs.dir "${project.buildDir}\\out"

    doLast {
        def binDir = file("${project.buildDir}\\out\\${project.name}-${version}\\")
        println(binDir)
        exec {
            commandLine 'powershell', '-Command', 'Expand-Archive', '-LiteralPath', "'${project.buildDir}\\distributions\\${project.name}-${version}.zip'", '-DestinationPath', "'${project.buildDir}\\out'"
        }
        exec {
            workingDir binDir
            commandLine 'powershell', "-Command", "& '${project.buildDir}\\out\\${project.name}-${version}\\bin\\${project.name}.bat'"
        }
    }
}
